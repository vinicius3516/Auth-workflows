name: Deploy to Cloud Provider
on:
  workflow_call:
    inputs:
      ambiente:
        description: 'Environment to deploy to (dev, staging, prod)'
        required: true
        type: string
      manifests:
        description: 'Path to Kubernetes manifests for deployment'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag to use for deployment'
        required: true
        type: string
    secrets:
      kubeconfig:
        description: 'Kubeconfig secret for Digital Ocean Kubernetes'
        required: true
  
jobs:
  deploy:
    environment: ${{ inputs.ambiente }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # --------------------
      # DIGITAL OCEAN KUBERNETES
      # --------------------
      - name: Set Kube Context
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}


      - name: Create Kubernetes Secret
        run: |
          mkdir -p ./k8s
          cat <<EOF > ./k8s/secret.yaml
          apiVersion: v1
          kind: Secret
          metadata:
            name: kube-secret
          type: Opaque
          data:
            POSTGRES_PASSWORD: $(echo -n "${{ secrets.POSTGRES_PASSWORD }}" | base64 -w0)
            POSTGRES_USER: $(echo -n "${{ secrets.POSTGRES_USER }}" | base64 -w0)
            POSTGRES_DB: $(echo -n "${{ secrets.POSTGRES_DB }}" | base64 -w0)
            DB_DATABASE: $(echo -n "${{ secrets.DB_DATABASE }}" | base64 -w0)
            DB_USERNAME: $(echo -n "${{ secrets.DB_USERNAME }}" | base64 -w0)
            DB_PASSWORD: $(echo -n "${{ secrets.DB_PASSWORD }}" | base64 -w0)
            DB_HOST: $(echo -n "${{ secrets.DB_HOST }}" | base64 -w0)
          EOF


      - name: Deploy to Digital Ocean
        uses: azure/k8s-deploy@v5
        with:
          manifests: ${{ inputs.manifests }}
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/kube-news:${{ inputs.image_tag }}
          namespace: ${{ secrets.CONFIG_NAMESPACE }}
